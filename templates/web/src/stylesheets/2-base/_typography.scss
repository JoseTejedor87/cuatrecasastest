// ==========================================================================
// TYPOGRAPHY
// ==========================================================================

/*
Redefine the rem value while keeping it proportional.
Useful values, with default font-size of 16px:
>>> 62.5% -> 1rem = 10px, 0.1rem  = 1px
>>> 125%  -> 1rem = 20px, 0.05rem = 1px
*/


//
// https://24ways.org/2019/a-modern-typographic-scale/
//

// :root {
//     --scale-2: 7.1px;  /* 10.7 ÷ 1.5 */
//     --scale-1: 10.7px; /* 16 ÷ 1.5   */
//     --scale0: 16px;    /* body text  */
//     --scale1: 24px;    /* 16 × 1.5   */
//     --scale2: 36px;    /* 24 × 1.5   */
// }

// use
// p { font-size: var(--scale0); }
//

// :root {
//     --scale-2: 0.4rem;  /* 0.7rem ÷ 1.5 */
//     --scale-1: 0.7rem;  /* 1rem ÷ 1.5   */
//     --scale0: 1rem;     /* body text    */
//     --scale1: 1.5rem;   /* 1rem × 1.5   */
//     --scale2: 2.25rem;  /* 1.5rem × 1.5 */
// }

//
// html { font-size: 100%; }     /* 1rem = 16px */
//
// @media screen and (min-width: 25em) {
//     html { font-size: 112.5%; } /* 1rem = 18px */
// }
//


// :root {
//     --int: 1.5;
//     --scale0: 1rem;
//     --scale-1: calc(var(--scale0) / var(--int));
//     --scale-2: calc(var(--scale-1) / var(--int));
//     --scale1: calc(var(--scale0) * var(--int));
//     --scale2: calc(var(--scale1) * var(--int));
// }


//
// Final typographic scale
//
:root {
    $interval: 1.5;    // Unitless for proportional, unit for fixed
    $body-text: 1rem;  // Must have a unit
    $scale-min: -2;    // Unitless negative integer
    $scale-max: 2;     // Unitless positive integer

    --int: #{$interval};
    --scale0: #{$body-text};

    @if $scale-min < 0 {
        // Generate scale variables smaller than the base text size
        @for $i from -1 through $scale-min {
            @if type-of($interval) == number {
                @if unitless($interval) {
                    --scale#{$i}: calc(var(--scale#{$i + 1}) / var(--int));
                } @else {
                    --scale#{$i}: calc(var(--scale#{$i + 1}) - var(--int));
                }
            }
        }
    }
    @if $scale-max > 0 {
        // Generate scale variables larger than the base text size
        @for $i from 1 through $scale-max {
            @if type-of($interval) == number {
                @if unitless($interval) {
                    --scale#{$i}: calc(var(--scale#{$i - 1}) * var(--int));
                } @else {
                    --scale#{$i}: calc(var(--scale#{$i - 1}) + var(--int));
                }
            }
        }
    }
}


//
// Another take
// https://codepen.io/gunnarbittersmann/details/rNamLbj
//
/*
:root {
    --int: 1.2;
    --scale0: 1rem;
    --scale-1: calc(var(--scale0) / var(--int));
    --scale-2: calc(var(--scale-1) / var(--int));
    --scale1: calc(var(--scale0) * var(--int));
    --scale2: calc(var(--scale1) * var(--int));
}

@media (min-width: 22em) {
    :root { --int: 1.3 }
}
@media (min-width: 32em) {
    :root { --int: 1.4 }
}
@media (min-width: 42em) {
    :root { --int: 1.5 }
}
*/


// use
/*
body {
    font: var(--scale0)/1.4 Calibri, sans-serif;
    max-width: 40em;
}

h1 {
    font-size: var(--scale2);
    line-height: 1.2;
}

h2 {
    font-size: var(--scale1);
    line-height: 1.2;
}
*/


html {
    // font-size: 125%;
    // maybe?
    // overflow-x: hidden;
}

body {
    color: $text-color;
    font-family: $body-font;
    font-size: 125%;
    font-weight: 400;
    line-height: 1.4;
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
    -moz-osx-font-smoothing: grayscale;
    font-feature-settings: 'liga';
}



//
// FONT SIZES AJUSTMENTS
// --------------------------------------------------------------------------

@function calculateRem($size) {
    $remSize: $size / 16px;
    @return #{$remSize}rem;
}

@mixin fontSize($size) {
    font-size: $size;
    font-size: calculateRem($size);
}

//
// @include fontSize(30px);
//


$rem-base-font: 16px !default;

@mixin fontFull($font-size, $line-height: 0) {
    font-size: $font-size;
    font-size: ($font-size / $rem-base-font) * 1rem;

    @if ($line-height > 0) {
        line-height: $line-height;
        line-height: ($line-height / $rem-base-font) * 1rem;
    }
}

//
// @include fontRem(30px, 26px);
//


//
// TITLES / COPY / ETC
// --------------------------------------------------------------------------

// full, background color
.section__title {
    @include fontSize(26px);
    margin: 0 0 2rem 0;
    padding: 0.4rem 0.8rem;
    text-transform: uppercase;
    color: $white;
    background-color: rgba($black, 0.5);

    @include when("article") {
        background-color: $article-bg-color;
    }

    @include when("event") {
        background-color: $main-color;
    }

    @include when("insight") {
        background-color: $complementary-color;
    }
}

// lawyer, half sections
.subsection__title {
    @include fontSize(40px);
    font-weight: 400;
    line-height: 1;
    letter-spacing: -1px;
    text-transform: uppercase;
}



//
// FLUID TYPE
// --------------------------------------------------------------------------

/*
body {
  color: $text-color;
  font: normal 125% / 1.4;
}
body {
  font-size: calc(14px + (26 - 14) * ((100vw - 300px) / (1600 - 300)));
  line-height: calc(1.3em + (1.5 - 1.2) * ((100vw - 300px)/(1600 - 300)));
}



//
// TYPOGRAPHY
// https://www.madebymike.com.au/writing/fluid-type-calc-examples/
// --------------------------------------------------------------------------

/*
//
// Pixel
//

.fluid-type {
  font-size: 14px;
}

@media screen and (min-width: 320px) {
  .fluid-type {
    font-size: calc(14px + 8 * ((100vw - 320px) / 960));
  }
}

@media screen and (min-width: 1280px) {
  .fluid-type {
    font-size: 22px;
  }
}


//
// Rem
//

.fluid-type {
  font-size: 0.875rem;
}

@media screen and (min-width: 20rem) {
  .fluid-type {
    font-size: calc(0.875rem + 0.5 * ((100vw - 20rem) / 60));
  }
}

@media screen and (min-width: 80rem) {
  .fluid-type {
    font-size: 1.375rem;
  }
}


//
// Fluid line-height
//

.molten-leading {
  line-height: 1.2em;
}

@media screen and (min-width: 20em) {
  .molten-leading {
    line-height: calc(1.2em + 0.6 * ((100vw - 20em) / 60));
  }
}

@media screen and (min-width: 80em) {
  .molten-leading {
    line-height: 1.8em;
  }
}


//
// Fluid box
//

.fluid-box {
  width: 200px;
}

@media screen and (min-width: 320px) {
  .fluid-box {
    width: calc(200px + 300 * ((100vw - 320px) / 960));
  }
}

@media screen and (min-width: 1280px) {
  .fluid-box {
    width: 500px;
  }
}
*/
